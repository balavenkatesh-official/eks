apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: frontend-ingress
    labels:
        app: frontend-ingress
    annotations:
        alb.ingress.kubernetes.io/load-balancer-name: fronend-alb
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/healthcheck-port: traffic-port
        alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
        alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
        alb.ingress.kubernetes.io/healthcheck-timeout-seconds: 	'5'
        alb.ingress.kubernetes.io/healthy-threshold-count: '2'
        alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
        alb.ingress.kubernetes.io/success-codes: '200'
        external-dns.alpha.kubernetes.io/hostname: test.cyberfortune.in
        alb.ingress.kubernetes.io/target-type: ip 
spec:
    ingressClassName: frontend-ingress-class
    defaultBackend:
        service:
            name: frontend-service
            port:
                number: 80
    rules:
        - http:
            paths:
                - path: /app2
                  pathType: Prefix
                  backend:
                    service:
                        name: frontend-service-2
                        port:
                            number: 80
        - http:
            paths:
                - path: /app3
                  pathType: Prefix
                  backend:
                    service:
                        name: frontend-service-3
                        port:
                            number: 80    